// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Customer {
  id String @id 
  name String
  avatar String
  phone String
  city String
  gender Int
  username String
  password String
  district String
  ward String 
  citizenIdentificationNumber String
  email String?
  dateOfEntry DateTime @default(now())
  status Int @default(1) // default 1: active, 2:non-active
  roomId String
  room Room @relation(fields: [roomId], references: [id],onDelete: Cascade,onUpdate: Cascade )
}

model Report {
  id String @id
  roomId String
  room Room @relation(fields: [roomId], references: [id],onDelete: Cascade)
  totalPayment Float
  payment Float
  environmentFee Float
  status Int @default(1) // 1:non-active, 2 :active
  internetFee Float?
  electricFee Float
  domesticWaterFee Float
  domesticWaterNumber Float
  electricNumber Float?
  createAt DateTime @default(now())
}

model Room {
  id String @id 
  name String 
  status Int @default(1) // default 1: empty, 1:hired 2//editing
  amountOfPeople Int?
  payment Float
  area Float?
  floor String?
  electricFee Float?
  domesticWaterFee Float?
  internetFee Float?
  environmentFee Float?
  customers Customer[]
  reports Report[]
  buildingId String
  motorbikeAmount Int?
  dateStart DateTime?
  dateEnd DateTime?
  furniture String?
  building Building @relation(fields: [buildingId],references: [id],onDelete: Cascade, onUpdate: Cascade)
}

model Building {
  id String @id 
  city String
  district String
  ward String
  userId String 
  user User @relation(fields: [userId], references: [id])
  amountRooms Int
  status Int @default(1) // default 1: empty, 2:hired
  rooms Room[]
  numberOfFloors Int 
  createAt DateTime @default(now())
}


model User {
  id String @id 
  avatar String
  name String 
  city String
  district String
  ward String 
  phone String 
  username String @unique 
  password String @unique 
  role Int @default(1) //default 0: admin 1: customer
  status Int @default(1) //default 1: non-active 2: active;
  approveBy String? 
  createAt DateTime @default(now())
  buildings Building[]
}